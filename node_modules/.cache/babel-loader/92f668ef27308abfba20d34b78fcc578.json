{"ast":null,"code":"import _classCallCheck from \"/Users/Russell/WebstormProjects/infinite_perspectives/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Russell/WebstormProjects/infinite_perspectives/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Russell/WebstormProjects/infinite_perspectives/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Russell/WebstormProjects/infinite_perspectives/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Russell/WebstormProjects/infinite_perspectives/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from \"react\";\nimport * as THREE from \"three\";\n\nvar Prism =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Prism, _Component);\n\n  function Prism(props) {\n    var _this;\n\n    _classCallCheck(this, Prism);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Prism).call(this, props));\n    var length = 8,\n        width = 8;\n    var shape = new THREE.Shape();\n    shape.moveTo(-width, -length);\n    shape.lineTo(-length, width);\n    shape.lineTo(length, width);\n    shape.lineTo(-width, -length);\n    var extrudeSettings = {\n      depth: 100\n    };\n    var prismGeometry = new THREE.ExtrudeGeometry(shape, extrudeSettings);\n    var prismMaterial = new THREE.MeshLambertMaterial({\n      color: Math.random() * 0xffffff // wireframe: true\n\n    });\n    var tri = new THREE.Mesh(prismGeometry, prismMaterial);\n    tri.position.z = _this.randomInRange(-140, 0);\n    tri.position.x = _this.randomInRange(-90, 90);\n    tri.position.y = _this.randomInRange(5, 40); // this.scene.add(tri);\n\n    _this.tri = tri;\n    return _possibleConstructorReturn(_this, _this.tri);\n  }\n\n  _createClass(Prism, [{\n    key: \"randomInRange\",\n    value: function randomInRange(from, to) {\n      var x = Math.random() * (to - from);\n      return x + from;\n    }\n  }]);\n\n  return Prism;\n}(Component);\n\nexport default Prism;","map":{"version":3,"sources":["/Users/Russell/WebstormProjects/infinite_perspectives/src/prism.js"],"names":["React","Component","THREE","Prism","props","length","width","shape","Shape","moveTo","lineTo","extrudeSettings","depth","prismGeometry","ExtrudeGeometry","prismMaterial","MeshLambertMaterial","color","Math","random","tri","Mesh","position","z","randomInRange","x","y","from","to"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;IACMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AAEA,QAAIC,MAAM,GAAG,CAAb;AAAA,QACEC,KAAK,GAAG,CADV;AAGA,QAAIC,KAAK,GAAG,IAAIL,KAAK,CAACM,KAAV,EAAZ;AACAD,IAAAA,KAAK,CAACE,MAAN,CAAa,CAACH,KAAd,EAAqB,CAACD,MAAtB;AACAE,IAAAA,KAAK,CAACG,MAAN,CAAa,CAACL,MAAd,EAAsBC,KAAtB;AACAC,IAAAA,KAAK,CAACG,MAAN,CAAaL,MAAb,EAAqBC,KAArB;AACAC,IAAAA,KAAK,CAACG,MAAN,CAAa,CAACJ,KAAd,EAAqB,CAACD,MAAtB;AAEA,QAAIM,eAAe,GAAG;AACpBC,MAAAA,KAAK,EAAE;AADa,KAAtB;AAIA,QAAIC,aAAa,GAAG,IAAIX,KAAK,CAACY,eAAV,CAA0BP,KAA1B,EAAiCI,eAAjC,CAApB;AACA,QAAII,aAAa,GAAG,IAAIb,KAAK,CAACc,mBAAV,CAA8B;AAChDC,MAAAA,KAAK,EAAEC,IAAI,CAACC,MAAL,KAAgB,QADyB,CAGhD;;AAHgD,KAA9B,CAApB;AAKA,QAAIC,GAAG,GAAG,IAAIlB,KAAK,CAACmB,IAAV,CAAeR,aAAf,EAA8BE,aAA9B,CAAV;AACAK,IAAAA,GAAG,CAACE,QAAJ,CAAaC,CAAb,GAAiB,MAAKC,aAAL,CAAmB,CAAC,GAApB,EAAyB,CAAzB,CAAjB;AACAJ,IAAAA,GAAG,CAACE,QAAJ,CAAaG,CAAb,GAAiB,MAAKD,aAAL,CAAmB,CAAC,EAApB,EAAwB,EAAxB,CAAjB;AACAJ,IAAAA,GAAG,CAACE,QAAJ,CAAaI,CAAb,GAAiB,MAAKF,aAAL,CAAmB,CAAnB,EAAsB,EAAtB,CAAjB,CAzBiB,CA0BjB;;AACA,UAAKJ,GAAL,GAAWA,GAAX;AACA,6CAAO,MAAKA,GAAZ;AACD;;;;kCACaO,I,EAAMC,E,EAAI;AACtB,UAAIH,CAAC,GAAGP,IAAI,CAACC,MAAL,MAAiBS,EAAE,GAAGD,IAAtB,CAAR;AACA,aAAOF,CAAC,GAAGE,IAAX;AACD;;;;EAlCiB1B,S;;AAqCpB,eAAeE,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nclass Prism extends Component {\n  constructor(props) {\n    super(props);\n\n    let length = 8,\n      width = 8;\n\n    let shape = new THREE.Shape();\n    shape.moveTo(-width, -length);\n    shape.lineTo(-length, width);\n    shape.lineTo(length, width);\n    shape.lineTo(-width, -length);\n\n    let extrudeSettings = {\n      depth: 100\n    };\n\n    let prismGeometry = new THREE.ExtrudeGeometry(shape, extrudeSettings);\n    let prismMaterial = new THREE.MeshLambertMaterial({\n      color: Math.random() * 0xffffff\n\n      // wireframe: true\n    });\n    let tri = new THREE.Mesh(prismGeometry, prismMaterial);\n    tri.position.z = this.randomInRange(-140, 0);\n    tri.position.x = this.randomInRange(-90, 90);\n    tri.position.y = this.randomInRange(5, 40);\n    // this.scene.add(tri);\n    this.tri = tri;\n    return this.tri;\n  }\n  randomInRange(from, to) {\n    let x = Math.random() * (to - from);\n    return x + from;\n  }\n}\n\nexport default Prism;\n"]},"metadata":{},"sourceType":"module"}